snippet comment-m "insert a comment with name and date" b
/*
* $1
*  
* `git config user.name`
* `!v strftime("%a %d %b %Y")`
**/
endsnippet

snippet comment-i "insert an inline comment"
/* ${VISUAL}${0} `git config user.name`  `!v strftime("%a %d %b %Y")` **/
endsnippet

snippet todo "insert a TODO comment"
/* TODO ${VISUAL}${0} `git config user.name`  `!v strftime("%a %d %b %Y")` **/
endsnippet

snippet ReactFC "create a React function component"
type ${1:Name}Props = {
	${2}
}

const $1 = (props: $1Props) {
	${VISUAL}$0
}
endsnippet

global !p
def complete(t, opts):
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if(len(opts) == 1):
		return opts[0]
	return "(" + "|".join(opts) + ")"
endglobal

snippet log "log to the console"
console.log('%c ${1:variableName}', "color: $2`!p snip.rv=complete(t[2], ['royalblue', 'blueviolet', 'chartreuse', 'fuchsia'])`; font-size: 14px; font-weight: bold;", $1)
endsnippet


snippet UUID "UUID" !b
`!p import uuid
if not snip.c:
 snip.rv = uuid.uuid4().hex`
endsnippet

snippet eslint-dnl "eslint-disable-next-line"
/* eslint-disable-next-line ${VISUAL}${0:react-hooks/exhaustive-deps} */
endsnippet

snippet tslint-dnl "tslint:disable-next-line:"
/* tslint:disable-next-line:${VISUAL}${0:no-unsafe-any} */
endsnippet


snippet imp_fp-ts "imports from FP-TS"
import * as ${1:O} from 'fp-ts/lib/${VISUAL}${0:Option}' 
endsnippet

